<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【机器学习实战】一、随机森林算法预测泰坦尼克沉船人员获救案例</title>
      <link href="/2023/01/11/%E3%80%90%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98%E3%80%91%E4%B8%80%E3%80%81%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E7%AE%97%E6%B3%95%E9%A2%84%E6%B5%8B%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E6%B2%89%E8%88%B9%E4%BA%BA%E5%91%98%E8%8E%B7%E6%95%91%E6%A1%88%E4%BE%8B/"/>
      <url>/2023/01/11/%E3%80%90%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98%E3%80%91%E4%B8%80%E3%80%81%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E7%AE%97%E6%B3%95%E9%A2%84%E6%B5%8B%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E6%B2%89%E8%88%B9%E4%BA%BA%E5%91%98%E8%8E%B7%E6%95%91%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="随机森林算法预测泰坦尼克号沉船人员获救案例"><a href="#随机森林算法预测泰坦尼克号沉船人员获救案例" class="headerlink" title="随机森林算法预测泰坦尼克号沉船人员获救案例"></a>随机森林算法预测泰坦尼克号沉船人员获救案例</h2><h4 id="一、导入相关第三方库"><a href="#一、导入相关第三方库" class="headerlink" title="一、导入相关第三方库"></a>一、导入相关第三方库</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd <span class="comment"># 数据分析</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sklearn <span class="comment"># 机器学习库</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> ensemble <span class="comment"># 随机森林算法在ensemble类中</span></span><br><span class="line"><span class="comment"># 预处理相关</span></span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder <span class="comment"># 编码转换</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> feature_selection <span class="comment"># 特征选择</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> model_selection <span class="comment"># 模型选择</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics <span class="comment"># 模型评估相关</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘图相关</span></span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns <span class="comment"># 基于matplotlib,绘图更加方便</span></span><br><span class="line">%matplotlib inline <span class="comment"># 在notebook中显示图</span></span><br></pre></td></tr></table></figure><h4 id="二、加载源数据集"><a href="#二、加载源数据集" class="headerlink" title="二、加载源数据集"></a>二、加载源数据集</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data_raw = pd.read_csv(<span class="string">&#x27;train.csv&#x27;</span>)</span><br><span class="line">data_val = pd.read_csv(<span class="string">&#x27;test.csv&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示部分数据</span></span><br><span class="line">data_raw.head() <span class="comment"># 默认显示五条</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/bd0d743c53b044208bf876c6d2c29983.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看表格中每一个字段的属性</span></span><br><span class="line">data_raw.info()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/83fc2b767200465a939c8c973fed0367.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将列名称转换为小写</span></span><br><span class="line">data_raw.columns = data_raw.columns.<span class="built_in">str</span>.lower()</span><br><span class="line">data_val.columns = data_val.columns.<span class="built_in">str</span>.lower()</span><br><span class="line">data_raw.head()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/386ebc78d1094ffbbc2fa7b2e95eec65.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制图形</span></span><br><span class="line">sns.countplot(x=data_raw[<span class="string">&#x27;survived&#x27;</span>])</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/ec5a2669737341db8853a89dd7570e26.png" alt="在这里插入图片描述"></p><h4 id="三、数据清洗"><a href="#三、数据清洗" class="headerlink" title="三、数据清洗"></a>三、数据清洗</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 合并两个数据集 进行统一清洗</span></span><br><span class="line">data_all = [data_raw,data_val]</span><br><span class="line"><span class="comment"># 查看数据集中的空值</span></span><br><span class="line">data_raw.isnull().<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1ae6a675565a41fd8ccdc4d8e8bf6976.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_val.isnull().<span class="built_in">sum</span>() <span class="comment"># 查看测试集是否有空值</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/0df97ea95646407a8b2723517cd1b24f.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对源数据集进行描述</span></span><br><span class="line">data_raw.describe(include=<span class="string">&#x27;all&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/da084bd072d74d6097541ea2dd4a3eb2.png" alt="在这里插入图片描述"></p><h5 id="1-补足空缺值"><a href="#1-补足空缺值" class="headerlink" title="(1)补足空缺值"></a>(1)补足空缺值</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对原始数据集（训练集+测试集）进行清理</span></span><br><span class="line"><span class="keyword">for</span> dataset <span class="keyword">in</span> data_all :</span><br><span class="line">    <span class="comment"># 补足空缺值</span></span><br><span class="line">    dataset[<span class="string">&#x27;age&#x27;</span>].fillna(dataset[<span class="string">&#x27;age&#x27;</span>].median(),inplace=<span class="literal">True</span>) <span class="comment"># median()取年龄的中位数补全空缺值</span></span><br><span class="line">    dataset[<span class="string">&#x27;fare&#x27;</span>].fillna(dataset[<span class="string">&#x27;fare&#x27;</span>].median(),inplace=<span class="literal">True</span>) <span class="comment"># 补全船票</span></span><br><span class="line">    dataset[<span class="string">&#x27;embarked&#x27;</span>].fillna(dataset[<span class="string">&#x27;embarked&#x27;</span>].mode()[<span class="number">0</span>],inplace=<span class="literal">True</span>)<span class="comment"># 取船舱等级按照频率排序，最大值</span></span><br></pre></td></tr></table></figure><h5 id="2-删除一些无用字段"><a href="#2-删除一些无用字段" class="headerlink" title="(2)删除一些无用字段"></a>(2)删除一些无用字段</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除一些无用字段</span></span><br><span class="line">drop_columns = [<span class="string">&#x27;cabin&#x27;</span>,<span class="string">&#x27;passengerid&#x27;</span>,<span class="string">&#x27;ticket&#x27;</span>]</span><br><span class="line">data_raw.drop(drop_columns,axis=<span class="number">1</span>,inplace=<span class="literal">True</span>) <span class="comment"># axis=1 删除所有行中该列元素 inplace=True 在该文件中修改</span></span><br><span class="line">data_val.drop(drop_columns,axis=<span class="number">1</span>,inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_raw.isnull().<span class="built_in">sum</span>() <span class="comment"># 训练集</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2d6b6aeace6a42fbbb3c7244da266c67.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_val.isnull().<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/a16b0477d8734afba2ccb8ae3f0cb156.png#pic_center" alt="在这里插入图片描述"></p><h4 id="四、进行特征构建"><a href="#四、进行特征构建" class="headerlink" title="四、进行特征构建"></a>四、进行特征构建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> dataset <span class="keyword">in</span> data_all :</span><br><span class="line">    <span class="comment"># 构建新字段</span></span><br><span class="line">    <span class="comment"># （1）family_size 家庭规模：sibsp + parch</span></span><br><span class="line">    dataset[<span class="string">&#x27;family_size&#x27;</span>] = dataset[<span class="string">&#x27;sibsp&#x27;</span>] + dataset[<span class="string">&#x27;parch&#x27;</span>] + <span class="number">1</span></span><br><span class="line">    <span class="comment"># (2) 单身 single 1:单身 0：非单身</span></span><br><span class="line">    dataset[<span class="string">&#x27;single&#x27;</span>] = <span class="number">1</span></span><br><span class="line">    dataset[<span class="string">&#x27;single&#x27;</span>].loc[dataset[<span class="string">&#x27;family_size&#x27;</span>] &gt; <span class="number">1</span>] = <span class="number">0</span> <span class="comment"># 家庭规模 &gt; 1 表示非单身</span></span><br><span class="line">    <span class="comment"># (3) 身份 title</span></span><br><span class="line">    dataset[<span class="string">&#x27;title&#x27;</span>] = dataset[<span class="string">&#x27;name&#x27;</span>].<span class="built_in">str</span>.split(<span class="string">&#x27;, &#x27;</span>, expand=<span class="literal">True</span>)[<span class="number">1</span>].<span class="built_in">str</span>.split(<span class="string">&#x27;.&#x27;</span>,expand=<span class="literal">True</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="comment">#     dataset[&#x27;title&#x27;] = dataset[&#x27;name&#x27;].apply(lambda x : x.split(&#x27;, &#x27;)[1].apply(lambda x : x.split(&#x27;.&#x27;)[0]))</span></span><br><span class="line">    <span class="comment"># (4) 票价 fare_bin</span></span><br><span class="line">    dataset[<span class="string">&#x27;fare_bin&#x27;</span>] = pd.qcut(dataset[<span class="string">&#x27;fare&#x27;</span>],<span class="number">4</span>) <span class="comment"># 根据票价，分成4组（每组元素个数一致）</span></span><br><span class="line">    <span class="comment"># （5）年龄 age_bin</span></span><br><span class="line">    dataset[<span class="string">&#x27;age_bin&#x27;</span>] = pd.cut(dataset[<span class="string">&#x27;age&#x27;</span>].astype(<span class="built_in">int</span>),<span class="number">5</span>) <span class="comment"># 根据年龄分组，分成5组（每组元素不一致）</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset.head()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/71f8db94c9cf4130857aa0c53195f2a5.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据title统计人数</span></span><br><span class="line">data_raw[<span class="string">&#x27;title&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/5d124e8b4cb14ea8810528f5cee7738b.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title_names = (data_raw[<span class="string">&#x27;title&#x27;</span>].value_counts() &lt; <span class="number">10</span>) <span class="comment"># 将频率小于10的标记为True 其他的标记为False</span></span><br><span class="line">title_names</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/23430dc0722d4b488f0849f2c5a43efc.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># title : 将频率小于10的数据，全部归为一类：other</span></span><br><span class="line">data_raw[<span class="string">&#x27;title&#x27;</span>] = data_raw[<span class="string">&#x27;title&#x27;</span>].apply(<span class="keyword">lambda</span> x : <span class="string">&#x27;other&#x27;</span> <span class="keyword">if</span> title_names[x] <span class="keyword">else</span> x)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计数</span></span><br><span class="line">data_raw[<span class="string">&#x27;title&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/4b7616b92c4c4c7a889e596a500ede1c.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每一个title类别能够生存的概率</span></span><br><span class="line">data_raw[<span class="string">&#x27;survived&#x27;</span>].groupby(data_raw[<span class="string">&#x27;title&#x27;</span>]).mean() </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/28ba5938eab3407a876cfa3688822fff.png" alt="在这里插入图片描述"><br>**将特征编码形成新的字段，基于scikit-learn中的LabelEncoder() **</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> dataset <span class="keyword">in</span> data_all : </span><br><span class="line">    <span class="comment"># (1) 新字段 ：sex_code</span></span><br><span class="line">    dataset[<span class="string">&#x27;sex_code&#x27;</span>] = label.fit_transform(dataset[<span class="string">&#x27;sex&#x27;</span>])</span><br><span class="line">    <span class="comment"># (2) 新字段 ：embarked_code</span></span><br><span class="line">    dataset[<span class="string">&#x27;embarked_code&#x27;</span>] = label.fit_transform(dataset[<span class="string">&#x27;embarked&#x27;</span>])</span><br><span class="line">    <span class="comment"># (3) 新字段 ：title_code</span></span><br><span class="line">    dataset[<span class="string">&#x27;title_code&#x27;</span>] = label.fit_transform(dataset[<span class="string">&#x27;title&#x27;</span>])</span><br><span class="line">    <span class="comment"># (4) 新字段 ：age_bin_code</span></span><br><span class="line">    dataset[<span class="string">&#x27;age_bin_code&#x27;</span>] = label.fit_transform(dataset[<span class="string">&#x27;age_bin&#x27;</span>])</span><br><span class="line">    <span class="comment"># (5) 新字段 ：fare_bin_code</span></span><br><span class="line">    dataset[<span class="string">&#x27;fare_bin_code&#x27;</span>] = label.fit_transform(dataset[<span class="string">&#x27;fare_bin&#x27;</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_raw.head()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f220c6f0084b4ed1bc06d111c08340f8.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列名</span></span><br><span class="line">data_raw.columns.tolist()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/7d280d49f481457f9c369fc8b5811242.png" alt="在这里插入图片描述"></p><h4 id="五、特征选择"><a href="#五、特征选择" class="headerlink" title="五、特征选择"></a>五、特征选择</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Target = [<span class="string">&#x27;survived&#x27;</span>] <span class="comment"># 标签</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方式一</span></span><br><span class="line">data_columns_one = [<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;pclass&#x27;</span>,<span class="string">&#x27;embarked&#x27;</span>,<span class="string">&#x27;title&#x27;</span>,<span class="string">&#x27;sibsp&#x27;</span>,<span class="string">&#x27;parch&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;fare&#x27;</span>,<span class="string">&#x27;family_size&#x27;</span>,<span class="string">&#x27;single&#x27;</span>]</span><br><span class="line">columns_one = Target + data_columns_one</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方式二</span></span><br><span class="line">data_columns_two = [<span class="string">&#x27;sex_code&#x27;</span>,<span class="string">&#x27;pclass&#x27;</span>,<span class="string">&#x27;embarked_code&#x27;</span>,<span class="string">&#x27;title_code&#x27;</span>,<span class="string">&#x27;sibsp&#x27;</span>,<span class="string">&#x27;parch&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;fare&#x27;</span>]</span><br><span class="line">columns_two = Target + data_columns_two</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方式三</span></span><br><span class="line">data_columns_three = [<span class="string">&#x27;sex_code&#x27;</span>,<span class="string">&#x27;pclass&#x27;</span>,<span class="string">&#x27;embarked_code&#x27;</span>,<span class="string">&#x27;title_code&#x27;</span>,<span class="string">&#x27;family_size&#x27;</span>,<span class="string">&#x27;age_bin_code&#x27;</span>,<span class="string">&#x27;fare_bin_code&#x27;</span>]</span><br><span class="line">columns_three = Target + data_columns_three</span><br></pre></td></tr></table></figure><p><strong>通过pandas中的get_dummies()进行编码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data_one_dummy = pd.get_dummies(data_raw[data_columns_one])</span><br><span class="line">data_one_dummy_list = data_one_dummy.columns.tolist()</span><br><span class="line"><span class="built_in">len</span>(data_one_dummy_list) <span class="comment"># 输出17</span></span><br></pre></td></tr></table></figure><h4 id="六、划分训练集和测试集"><a href="#六、划分训练集和测试集" class="headerlink" title="六、划分训练集和测试集"></a>六、划分训练集和测试集</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一</span></span><br><span class="line">X_train_one, X_test_one,y_train_one, y_text_one = model_selection.train_test_split(data_one_dummy[data_one_dummy_list],</span><br><span class="line">                                                                                  data_raw[Target],</span><br><span class="line">                                                                                  random_state = <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_train_one.shape</span><br><span class="line"><span class="comment"># 输出： (668, 1)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_test_one.shape</span><br><span class="line"><span class="comment"># 输出： (223, 17)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式二</span></span><br><span class="line">X_train_two, X_test_two, y_train_two, y_test_two = model_selection.train_test_split(data_raw[data_columns_two],</span><br><span class="line">                                                                                   data_raw[Target],</span><br><span class="line">                                                                                   random_state = <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_train_two.shape</span><br><span class="line"><span class="comment"># 输出：(668, 8)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_test_two.shape</span><br><span class="line"><span class="comment"># 输出： (223, 8)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式三</span></span><br><span class="line">X_train_three, X_test_three, y_train_three, y_test_three = model_selection.train_test_split(data_raw[data_columns_three],</span><br><span class="line">                                                                                            data_raw[Target],</span><br><span class="line">                                                                                            random_state=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_train_three.shape</span><br><span class="line"><span class="comment"># 输出：(668, 7)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_test_three.shape</span><br><span class="line"><span class="comment"># 输出： (223, 7)</span></span><br></pre></td></tr></table></figure><h4 id="七、随机森林算法实现"><a href="#七、随机森林算法实现" class="headerlink" title="七、随机森林算法实现"></a>七、随机森林算法实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rf = RandomForestClassifier(max_features=<span class="string">&#x27;auto&#x27;</span>,</span><br><span class="line">                           random_state = <span class="number">1</span>,</span><br><span class="line">                           n_jobs = -<span class="number">1</span>)<span class="comment"># 多线程进行训练</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网格搜索</span></span><br><span class="line">param_grid = &#123;</span><br><span class="line">    <span class="string">&#x27;criterion&#x27;</span> : [<span class="string">&#x27;gini&#x27;</span>,<span class="string">&#x27;entropy&#x27;</span>], <span class="comment"># 标准： 基尼 交叉熵</span></span><br><span class="line">    <span class="string">&#x27;min_samples_leaf&#x27;</span>:[<span class="number">1</span>,<span class="number">5</span>,<span class="number">10</span>], <span class="comment"># 最小的叶子节点数</span></span><br><span class="line">    <span class="string">&#x27;min_samples_split&#x27;</span>:[<span class="number">2</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">16</span>],<span class="comment"># 最小的分割数</span></span><br><span class="line">    <span class="string">&#x27;n_estimators&#x27;</span>:[<span class="number">50</span>,<span class="number">100</span>,<span class="number">400</span>,<span class="number">700</span>,<span class="number">1000</span>]  <span class="comment"># 决策树的数目</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gs = GridSearchCV(estimator=rf,</span><br><span class="line">                 param_grid=param_grid,</span><br><span class="line">                 scoring=<span class="string">&#x27;accuracy&#x27;</span>,<span class="comment"># 准确度作为评判标准</span></span><br><span class="line">                 cv = <span class="number">3</span>,<span class="comment"># 交叉验证</span></span><br><span class="line">                 n_jobs= -<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对方式一的特征进行训练</span></span><br><span class="line">gs = gs.fit(X_train_one, y_train_one)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(gs.best_score_)</span><br><span class="line"><span class="comment"># 输出 ： 0.8323839534601868</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(gs.best_params_)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/61f0633f6ff1489fb89dca6a364af705.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rf2 = RandomForestClassifier(criterion=<span class="string">&#x27;entropy&#x27;</span>,</span><br><span class="line">                             min_samples_leaf=<span class="number">5</span>,</span><br><span class="line">                             min_samples_split=<span class="number">12</span>,</span><br><span class="line">                             n_estimators=<span class="number">50</span>,</span><br><span class="line">                             n_jobs=-<span class="number">1</span>,</span><br><span class="line">                             random_state=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rf2.fit(X_train_one, y_train_one)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/6eaf4bcf4a1c4115aa2d78ed88ace8ad.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X_train_one.head()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/b475bacc8da6426ea0e7d871d525bd83.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据特征重要性进行排序</span></span><br><span class="line">pd.concat((pd.DataFrame(X_train_one.iloc[:,<span class="number">1</span>:].columns,columns=[<span class="string">&#x27;Variable&#x27;</span>]),</span><br><span class="line">          pd.DataFrame(rf2.feature_importances_,columns=[<span class="string">&#x27;importance&#x27;</span>])),</span><br><span class="line">         axis = <span class="number">1</span>).sort_values(by=<span class="string">&#x27;importance&#x27;</span>,ascending = <span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/e5bb1383d84e4f0b9591b9e90167c22c.png" alt="在这里插入图片描述"><br><strong>在test上进行预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在test上进行预测</span></span><br><span class="line">pred = rf2.predict(X_test_one)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pred_df = pd.DataFrame(pred, columns=[<span class="string">&#x27;survived&#x27;</span>])</span><br><span class="line">pred_df.head()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/64f583a8a3e746c8a2491e4b71f641b3.png" alt="在这里插入图片描述"></p><h4 id="八、在最终的test-csv上预测"><a href="#八、在最终的test-csv上预测" class="headerlink" title="八、在最终的test.csv上预测"></a>八、在最终的test.csv上预测</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data_val_dummy = pd.get_dummies(data_val[data_columns_one])</span><br><span class="line">data_val_dummy.head()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/b2e997c7630545458d6134a144eda2f6.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_val_dummy_list = data_val_dummy.columns.tolist()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_val_dummy_list</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/7f68c3de249449c8877a1fedd0f18a7b.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">pred_val = rf2.predict(data_val_dummy[[</span><br><span class="line">                                         <span class="string">&#x27;pclass&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;age&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;fare&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;family_size&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;single&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;sex_female&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;sex_male&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;embarked_C&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;embarked_Q&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;embarked_S&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;title_Col&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;title_Dona&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;title_Dr&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;title_Master&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;title_Miss&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;title_Mr&#x27;</span>,</span><br><span class="line">                                         <span class="string">&#x27;title_Mrs&#x27;</span>,]])</span><br><span class="line">pred_val_df = pd.DataFrame(pred_val, columns=[<span class="string">&#x27;survived&#x27;</span>])</span><br><span class="line">pred_val_df.head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h4 id="九、最终结果"><a href="#九、最终结果" class="headerlink" title="九、最终结果"></a>九、最终结果</h4><p><img src="https://img-blog.csdnimg.cn/a408ba2862814cc6b35ba597cc827e81.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2023/01/10/2023-01-10/"/>
      <url>/2023/01/10/2023-01-10/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/10/hello-world/"/>
      <url>/2023/01/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
